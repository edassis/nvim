{
  "Competitive Programming": {
    "prefix": "!cp",
    "body": [
      "#include <bits/stdc++.h>",
      "// #include <ext/pb_ds/assoc_container.hpp>    // oset",
      "// #include <ext/pb_ds/tree_policy.hpp>        // oset",
      "",
      "// using namespace __gnu_pbds;                 // oset",
      "using namespace std;",
      "",
      "#ifndef ONLINE_JUDGE",
      "    #define W(x) std::cerr << \"\\033[31m\" << #x << \" = \" << x << \"\\033[0m\" << \"\\n\"",
      "    #define dbg(msg, var) std::cerr << \"\\033[31m\" << << msg << \" \" << var << \"\\033[0m\" << \"\\n\"",
      "#else",
      "    #define W(x)",
      "    #define dbg(msg, var)",
      "#endif",
      "// Types",
      "using ll = long long;",
      "using pi = pair<int,int>;",
      "using pl = pair<ll,ll>;",
      "using vi = vector<int>;",
      "using vl = vector<ll>;",
      "using vpi = vector<pi>;",
      "using vpl = vector<pl>;",
      "template <typename T> using V = vector<T>;",
      "// template<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;",
      "// Macros",
      "#define pb push_back",
      "#define eb emplace_back",
      "#define mp make_pair",
      "#define mt make_tuple",
      "#define ff first",
      "#define ss second",
      "#define endl '\\n'",
      "#define l0p(i, n) for(int i=0; i<(int)n; i++)",
      "#define lop(i, k, n) for(int i=k; i<(int)n; i++)",
      "#define rop(i, k, n) for(int i=k; i>=(int)n; i--)",
      "#define all(x) x.begin(), x.end()",
      "#define rall(x) x.rbegin(), x.rend()",
      "#define sz(x) (int)x.size()",
      "#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)",
      "// Functions",
      "template<typename T> inline void clr(T& x) { memset(x, 0, sizeof(x)); }",
      "template <typename T> inline ostream &operator<<(ostream &out, const V<T> &v) { l0p(i, v.size()) { out << v[i] << ' '; }; return out; }",
      "template <typename T, typename Y> inline ostream &operator<<(ostream &out, const pair<T,Y> &v) { out << v.ff << ' ' << v.ss; return out; }",
      "// https://stackoverflow.com/a/41171552",
      "template <class TupType, size_t... I> inline void print(ostream &os, const TupType &tuple, index_sequence<I...>) { (..., (os << (I == 0 ? \"\" : \" \") << get<I>(tuple))); }",
      "template <class... T> inline void print(ostream &os, const tuple<T...> &tuple) { print(os, tuple, make_index_sequence<sizeof...(T)>()); }",
      "template <class... T> inline ostream &operator<<(ostream &os, const tuple<T...> &tuple) { print(os, tuple); return os; }",
      "template <class... T> inline void print(const tuple<T...> &tuple) { print(cout, tuple); }",
      "template <typename T> inline void print(const T &v) { cout << v << endl; }",
      "template <typename T> inline void print(const V<T> &v, const int& s, const int& n) { lop(i,s,n) { cout << v[i] << ' '; }; cout << endl; }",
      "// Constants",
      "const ll MOD = 1e7+2;",
      "const ll oo = 1e9+7;",
      "const ll N = 2e5+4;",
      "",
      "int32_t main() {",
      "    fastio;",
      "",
      "    // int t; cin >> t;",
      "    // while(t--) {}",
      "    $0",
      "",
      "    return 0;",
      "}",
      ""
    ],
    "description": "Competitive Programming"
  }
}
